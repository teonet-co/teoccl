# C/C++ CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ for more details
#
# MAINTAINER Kirill Scherba <kirill@scherba.ru>

version: 2

jobs:
  compile:
    docker:
      - image: ubuntu:20.04
        working_directory: ~/teoccl
        environment:
          CI_FORCE_TEST: 1
    steps:
      - run:
          command: |
            apt update -qq
            DEBIAN_FRONTEND="noninteractive" TZ="America/New_York" apt-get -y install tzdata
            apt install -y --no-install-recommends software-properties-common wget gpg-agent shellcheck
            apt install -y --no-install-recommends git make pkg-config libtool autoconf intltool
            apt install -y --no-install-recommends gcc gcc-7 gcc-8 gcc-10
            apt install -y --no-install-recommends g++ g++-7 g++-8 g++-10
            apt install -y --no-install-recommends libglib2.0-dev doxygen checkinstall libcunit1-dev libcpputest-dev
      - checkout
      - run: git submodule update --init --recursive
      - run: ./autogen.sh
      - run: ./configure --prefix=/usr
      - run: CC=gcc-10 CXX=g++-10 make
      - run: CC=gcc-10 CXX=g++-10 make test
      - run: make clean


  package-and-publish-release:
    machine: true
    working_directory: ~/teoccl
    steps:
      - checkout
      - run:
          name: "package with packagecore"
          command: |
            # Clean up
            rm -rf ./dist/*
            # Pack source
            git archive -o ../${CIRCLE_PROJECT_REPONAME}-${CIRCLE_TAG}.tar.gz --format tar.gz --prefix=${CIRCLE_PROJECT_REPONAME}-${CIRCLE_TAG#v}/ ${CIRCLE_TAG}
            # Use latest installed python3 from pyenv
            export PYENV_VERSION="$(pyenv versions | grep -Po '\b3\.\d+\.\d+' | tail -1)"
            pip install packagecore
            packagecore -c misc/packagecore/packagecore.yaml -o ./dist/ ${CIRCLE_TAG#v} ${CIRCLE_BUILD_NUM}
            # Move source pack to dist
            mv ../${CIRCLE_PROJECT_REPONAME}-${CIRCLE_TAG}.tar.gz dist/
      - run:
          name: "publish to GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t "${GITHUB_API_TOKEN}" -u "${CIRCLE_PROJECT_USERNAME}" -r "${CIRCLE_PROJECT_REPONAME}" -c "${CIRCLE_SHA1}" -body "$(cat ./misc/RELEASE_BODY)" ${CIRCLE_TAG} ./dist/
      - run:
          name: "publish docs to GitHub"
          command: |
            ./misc/make_remote_doc_upload.sh teoccl
      - run:
          name: "publish to Bintray"
          command: |
            BINTRAY_USER=${CI_BINTRAY_USER} BINTRAY_PASS=${CI_BINTRAY_API_KEY} BINTRAY_COMPONENT=release BINTRAY_ORG=teonet-co python ./misc/bintray/bintray.py publish ./dist
workflows:
  version: 2

  test:
    jobs:
      - compile

  publish-github-release:
    jobs:
      - package-and-publish-release:
          context: CI_BUILD
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
